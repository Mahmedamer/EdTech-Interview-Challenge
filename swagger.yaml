openapi: 3.0.4
info:
  title: Student Progress Tracker API
  description: A comprehensive REST API for tracking student progress and performance with advanced rate limiting
  contact:
    name: Development Team
    email: dev@studenttracker.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: v1.0
paths:
  /api/v1/Analytics/class-summary:
    get:
      tags:
        - Analytics
      parameters:
        - name: grade
          in: query
          schema:
            type: integer
            format: int32
        - name: subject
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassSummaryDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassSummaryDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassSummaryDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Analytics/progress-trends:
    get:
      tags:
        - Analytics
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
        - name: period
          in: query
          schema:
            type: string
            default: Monthly
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProgressTrendsDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressTrendsDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProgressTrendsDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Analytics/performance-distribution:
    get:
      tags:
        - Analytics
      parameters:
        - name: grade
          in: query
          schema:
            type: integer
            format: int32
        - name: subject
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Analytics/engagement-metrics:
    get:
      tags:
        - Analytics
      parameters:
        - name: grade
          in: query
          schema:
            type: integer
            format: int32
        - name: days
          in: query
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Auth/login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LoginResponseDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
  /api/v1/Auth/profile:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserProfileDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserProfileDtoApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
  '/api/v1/Auth/users/{id}/students':
    get:
      tags:
        - Auth
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StudentDtoListApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDtoListApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StudentDtoListApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
  /api/v1/Auth/logout:
    post:
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/RateLimit/statistics:
    get:
      tags:
        - RateLimit
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StatisticsDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StatisticsDtoApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/RateLimit/clients/{clientId}':
    get:
      tags:
        - RateLimit
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClientInfoDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInfoDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ClientInfoDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/RateLimit/clients/{clientId}/reset':
    post:
      tags:
        - RateLimit
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClientResetDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResetDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ClientResetDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/RateLimit/configuration:
    get:
      tags:
        - RateLimit
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConfigurationDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ConfigurationDtoApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/RateLimit/simulate:
    post:
      tags:
        - RateLimit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulationRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SimulationRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SimulationRequestDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SimulationResultDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationResultDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SimulationResultDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Reports/export/students:
    get:
      tags:
        - Reports
      parameters:
        - name: format
          in: query
          schema:
            type: string
            default: csv
        - name: grade
          in: query
          schema:
            type: integer
            format: int32
        - name: subject
          in: query
          schema:
            type: string
        - name: includeProgress
          in: query
          schema:
            type: boolean
            default: true
        - name: includeAssignments
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Reports/student/{studentId}/progress-report':
    get:
      tags:
        - Reports
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: format
          in: query
          schema:
            type: string
            default: pdf
        - name: includeHistory
          in: query
          schema:
            type: boolean
            default: true
        - name: includeRecommendations
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Reports/class-summary:
    get:
      tags:
        - Reports
      parameters:
        - name: format
          in: query
          schema:
            type: string
            default: pdf
        - name: grade
          in: query
          schema:
            type: integer
            format: int32
        - name: subject
          in: query
          schema:
            type: string
        - name: includeAnalytics
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Reports/templates:
    get:
      tags:
        - Reports
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Reports/history:
    get:
      tags:
        - Reports
      parameters:
        - name: days
          in: query
          schema:
            type: integer
            format: int32
            default: 7
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Students:
    get:
      tags:
        - Students
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: grade
          in: query
          schema:
            type: integer
            format: int32
        - name: subject
          in: query
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
        - name: searchTerm
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: ascending
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StudentDtoPaginatedResponseDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDtoPaginatedResponseDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StudentDtoPaginatedResponseDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/StudentCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentCreateDto'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Students/{id}':
    get:
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/StudentUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentUpdateDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StudentDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Students/{id}/progress':
    get:
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StudentProgressDtoListApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentProgressDtoListApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StudentProgressDtoListApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentProgressCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/StudentProgressCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentProgressCreateDto'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StudentProgressDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentProgressDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StudentProgressDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Subjects:
    get:
      tags:
        - Subjects
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: grade
          in: query
          schema:
            type: integer
            format: int32
        - name: searchTerm
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: ascending
          in: query
          schema:
            type: boolean
            default: true
        - name: isActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubjectDtoPaginatedResponseDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoPaginatedResponseDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoPaginatedResponseDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Subjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SubjectCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubjectCreateDto'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Subjects/grade/{grade}':
    get:
      tags:
        - Subjects
      parameters:
        - name: grade
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubjectDtoListApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoListApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoListApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Subjects/{id}':
    get:
      tags:
        - Subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SubjectUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubjectUpdateDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubjectDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Subjects/{id}/details':
    get:
      tags:
        - Subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubjectDetailsDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectDetailsDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubjectDetailsDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Subjects/{id}/statistics':
    get:
      tags:
        - Subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubjectStatisticsDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectStatisticsDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubjectStatisticsDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Teachers:
    get:
      tags:
        - Teachers
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: searchTerm
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: ascending
          in: query
          schema:
            type: boolean
            default: true
        - name: isActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherDtoPaginatedResponseDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoPaginatedResponseDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoPaginatedResponseDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/TeacherCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TeacherCreateDto'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Teachers/active:
    get:
      tags:
        - Teachers
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherDtoListApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoListApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoListApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Teachers/{id}':
    get:
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/TeacherUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TeacherUpdateDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Teachers/{id}/details':
    get:
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherDetailsDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDetailsDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherDetailsDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Teachers/{id}/statistics':
    get:
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherStatisticsDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherStatisticsDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherStatisticsDtoApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Teachers/{id}/students':
    get:
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StudentDtoListApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDtoListApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StudentDtoListApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Teachers/assignments:
    post:
      tags:
        - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherStudentAssignmentCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/TeacherStudentAssignmentCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TeacherStudentAssignmentCreateDto'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherStudentAssignmentDtoApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherStudentAssignmentDtoApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherStudentAssignmentDtoApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Teachers/assignments/bulk:
    post:
      tags:
        - Teachers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkTeacherStudentAssignmentDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BulkTeacherStudentAssignmentDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BulkTeacherStudentAssignmentDto'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeacherStudentAssignmentDtoListApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherStudentAssignmentDtoListApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TeacherStudentAssignmentDtoListApiResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v1/Teachers/{teacherId}/students/{studentId}':
    delete:
      tags:
        - Teachers
      parameters:
        - name: teacherId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '503':
          description: Service Unavailable
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponseDto'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /WeatherForecast:
    get:
      tags:
        - WeatherForecast
      operationId: GetWeatherForecast
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
components:
  schemas:
    AnalyticsDto:
      required:
        - riskLevel
      type: object
      properties:
        averageRequestsPerClient:
          minimum: 0
          type: number
          format: double
        mostActiveHour:
          maximum: 23
          minimum: 0
          type: integer
          format: int32
        riskLevel:
          maxLength: 20
          minLength: 0
          type: string
      additionalProperties: false
    AssignmentDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        subjectId:
          type: integer
          format: int32
        subjectName:
          type: string
          nullable: true
        dueDate:
          type: string
          format: date-time
        maxPoints:
          type: integer
          format: int32
        assignmentType:
          type: string
          nullable: true
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    BulkTeacherStudentAssignmentDto:
      required:
        - studentIds
        - teacherId
      type: object
      properties:
        teacherId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        studentIds:
          minItems: 1
          type: array
          items:
            type: integer
            format: int32
        assignedDate:
          type: string
          format: date-time
      additionalProperties: false
    ClassSummaryDto:
      type: object
      properties:
        totalStudents:
          type: integer
          format: int32
        activeStudents:
          type: integer
          format: int32
        averagePerformance:
          type: number
          format: double
        averageCompletion:
          type: number
          format: double
        studentsStruggling:
          type: integer
          format: int32
        studentsOnTrack:
          type: integer
          format: int32
        studentsAdvanced:
          type: integer
          format: int32
        subjectPerformance:
          type: array
          items:
            $ref: '#/components/schemas/SubjectPerformanceDto'
          nullable: true
      additionalProperties: false
    ClassSummaryDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/ClassSummaryDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    ClientInfoDto:
      required:
        - clientId
        - clientTier
        - status
      type: object
      properties:
        clientId:
          maxLength: 100
          minLength: 1
          type: string
        clientTier:
          maxLength: 20
          minLength: 0
          type: string
        currentUsage:
          $ref: '#/components/schemas/CurrentUsageDto'
        violations:
          $ref: '#/components/schemas/ViolationsDto'
        timing:
          $ref: '#/components/schemas/TimingDto'
        status:
          maxLength: 50
          minLength: 0
          type: string
      additionalProperties: false
    ClientInfoDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/ClientInfoDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    ClientResetDto:
      required:
        - clientId
        - message
        - resetBy
      type: object
      properties:
        clientId:
          maxLength: 100
          minLength: 1
          type: string
        resetAt:
          type: string
          format: date-time
        resetBy:
          maxLength: 100
          minLength: 0
          type: string
        previousViolationCount:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        message:
          maxLength: 200
          minLength: 0
          type: string
      additionalProperties: false
    ClientResetDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/ClientResetDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    ClientTiersDto:
      type: object
      properties:
        basic:
          $ref: '#/components/schemas/TierLimitsDto'
        standard:
          $ref: '#/components/schemas/TierLimitsDto'
        premium:
          $ref: '#/components/schemas/TierLimitsDto'
      additionalProperties: false
    ClientsDto:
      type: object
      properties:
        topClients:
          type: array
          items:
            type: string
          nullable: true
        requestsByClient:
          type: object
          additionalProperties:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    ConfigurationDto:
      required:
        - status
      type: object
      properties:
        status:
          maxLength: 20
          minLength: 0
          type: string
        defaultLimits:
          $ref: '#/components/schemas/DefaultLimitsDto'
        clientTiers:
          $ref: '#/components/schemas/ClientTiersDto'
        features:
          $ref: '#/components/schemas/FeaturesDto'
        storage:
          $ref: '#/components/schemas/StorageDto'
      additionalProperties: false
    ConfigurationDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/ConfigurationDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    CurrentUsageDto:
      type: object
      properties:
        requestsInCurrentSecond:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        requestsInCurrentMinute:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        requestsInCurrentHour:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        requestsInCurrentDay:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        concurrentRequests:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
      additionalProperties: false
    DefaultLimitsDto:
      type: object
      properties:
        requestsPerSecond:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
        requestsPerMinute:
          maximum: 10000
          minimum: 1
          type: integer
          format: int32
        requestsPerHour:
          maximum: 1000000
          minimum: 1
          type: integer
          format: int32
        requestsPerDay:
          maximum: 50000000
          minimum: 1
          type: integer
          format: int32
        maxConcurrentRequests:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
      additionalProperties: false
    EndpointsDto:
      type: object
      properties:
        topRequestedEndpoints:
          type: array
          items:
            type: string
          nullable: true
        requestsByEndpoint:
          type: object
          additionalProperties:
            type: integer
            format: int32
          nullable: true
        blockedByEndpoint:
          type: object
          additionalProperties:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    FeaturesDto:
      type: object
      properties:
        progressivePenalties:
          type: boolean
        concurrentRequestLimiting:
          type: boolean
        ipWhitelisting:
          type: boolean
        clientTierSupport:
          type: boolean
        detailedStatistics:
          type: boolean
      additionalProperties: false
    GradeDistributionDto:
      type: object
      properties:
        grade:
          type: integer
          format: int32
        studentCount:
          type: integer
          format: int32
        averageProgress:
          type: number
          format: double
      additionalProperties: false
    LoginRequestDto:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    LoginResponseDto:
      type: object
      properties:
        token:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true
        expiresAt:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/UserProfileDto'
      additionalProperties: false
    LoginResponseDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/LoginResponseDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    MonthlyPerformanceDto:
      type: object
      properties:
        month:
          type: string
          format: date-time
        averageProgress:
          type: number
          format: double
        averagePerformance:
          type: number
          format: double
        activeStudents:
          type: integer
          format: int32
      additionalProperties: false
    ObjectApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          nullable: true
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    OverviewDto:
      type: object
      properties:
        totalRequests:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        blockedRequests:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        blockedPercentage:
          maximum: 100
          minimum: 0
          type: number
          format: double
        allowedRequests:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        allowedPercentage:
          maximum: 100
          minimum: 0
          type: number
          format: double
      additionalProperties: false
    PerformanceLevelDistributionDto:
      type: object
      properties:
        level:
          type: string
          nullable: true
        studentCount:
          type: integer
          format: int32
        percentage:
          type: number
          format: double
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    ProgressDataPointDto:
      type: object
      properties:
        date:
          type: string
          format: date-time
        averagePerformance:
          type: number
          format: double
        averageCompletion:
          type: number
          format: double
        activeStudents:
          type: integer
          format: int32
      additionalProperties: false
    ProgressTrendsDto:
      type: object
      properties:
        dataPoints:
          type: array
          items:
            $ref: '#/components/schemas/ProgressDataPointDto'
          nullable: true
        period:
          type: string
          nullable: true
      additionalProperties: false
    ProgressTrendsDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/ProgressTrendsDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    SimulationRequestDto:
      required:
        - scenarioName
      type: object
      properties:
        scenarioName:
          maxLength: 50
          minLength: 1
          type: string
        description:
          maxLength: 500
          minLength: 0
          type: string
          nullable: true
        requestCount:
          maximum: 10000
          minimum: 1
          type: integer
          format: int32
        delayBetweenRequestsMs:
          maximum: 10000
          minimum: 1
          type: integer
          format: int32
        durationMinutes:
          maximum: 60
          minimum: 1
          type: integer
          format: int32
        requestsPerMinute:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
        clientCount:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
        requestsPerClient:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
      additionalProperties: false
    SimulationResultDto:
      required:
        - scenarioName
      type: object
      properties:
        scenarioName:
          maxLength: 50
          minLength: 0
          type: string
        description:
          maxLength: 500
          minLength: 0
          type: string
          nullable: true
        parameters:
          $ref: '#/components/schemas/SimulationRequestDto'
        results:
          nullable: true
        recommendations:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    SimulationResultDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/SimulationResultDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    StatisticsDto:
      type: object
      properties:
        overview:
          $ref: '#/components/schemas/OverviewDto'
        endpoints:
          $ref: '#/components/schemas/EndpointsDto'
        clients:
          $ref: '#/components/schemas/ClientsDto'
        generatedAt:
          type: string
          format: date-time
        analytics:
          $ref: '#/components/schemas/AnalyticsDto'
      additionalProperties: false
    StatisticsDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/StatisticsDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    StorageDto:
      required:
        - dataRetention
        - type
      type: object
      properties:
        type:
          maxLength: 50
          minLength: 0
          type: string
        dataRetention:
          maxLength: 100
          minLength: 0
          type: string
      additionalProperties: false
    StudentCreateDto:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        grade:
          type: integer
          format: int32
        dateOfBirth:
          type: string
          format: date-time
        enrollmentDate:
          type: string
          format: date-time
        notes:
          type: string
          nullable: true
      additionalProperties: false
    StudentDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        grade:
          type: integer
          format: int32
        dateOfBirth:
          type: string
          format: date-time
        age:
          type: integer
          format: int32
        enrollmentDate:
          type: string
          format: date-time
        isActive:
          type: boolean
        notes:
          type: string
          nullable: true
        lastActivityDate:
          type: string
          format: date-time
        overallProgress:
          type: number
          format: double
        progressLevel:
          type: string
          nullable: true
      additionalProperties: false
    StudentDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/StudentDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    StudentDtoListApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
          nullable: true
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    StudentDtoPaginatedResponseDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
          nullable: true
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        hasNextPage:
          type: boolean
        hasPreviousPage:
          type: boolean
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    StudentDtoPaginatedResponseDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/StudentDtoPaginatedResponseDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    StudentProgressCreateDto:
      type: object
      properties:
        studentId:
          type: integer
          format: int32
        subjectId:
          type: integer
          format: int32
        completionPercentage:
          type: number
          format: double
        performanceScore:
          type: number
          format: double
        timeSpentMinutes:
          type: integer
          format: int32
        assessmentDate:
          type: string
          format: date-time
        progressLevel:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
      additionalProperties: false
    StudentProgressDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        studentId:
          type: integer
          format: int32
        studentName:
          type: string
          nullable: true
        subjectId:
          type: integer
          format: int32
        subjectName:
          type: string
          nullable: true
        completionPercentage:
          type: number
          format: double
        performanceScore:
          type: number
          format: double
        timeSpentMinutes:
          type: integer
          format: int32
        assessmentDate:
          type: string
          format: date-time
        progressLevel:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        lastActivityDate:
          type: string
          format: date-time
      additionalProperties: false
    StudentProgressDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/StudentProgressDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    StudentProgressDtoListApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/StudentProgressDto'
          nullable: true
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    StudentUpdateDto:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        grade:
          type: integer
          format: int32
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        isActive:
          type: boolean
          nullable: true
        notes:
          type: string
          nullable: true
      additionalProperties: false
    SubjectCreateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        grade:
          type: integer
          format: int32
      additionalProperties: false
    SubjectDetailsDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        grade:
          type: integer
          format: int32
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        totalAssignments:
          type: integer
          format: int32
        activeStudents:
          type: integer
          format: int32
        averageProgress:
          type: number
          format: double
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentDto'
          nullable: true
        recentProgress:
          type: array
          items:
            $ref: '#/components/schemas/StudentProgressDto'
          nullable: true
        statistics:
          $ref: '#/components/schemas/SubjectStatisticsDto'
      additionalProperties: false
    SubjectDetailsDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/SubjectDetailsDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    SubjectDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        grade:
          type: integer
          format: int32
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        totalAssignments:
          type: integer
          format: int32
        activeStudents:
          type: integer
          format: int32
        averageProgress:
          type: number
          format: double
      additionalProperties: false
    SubjectDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/SubjectDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    SubjectDtoListApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubjectDto'
          nullable: true
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    SubjectDtoPaginatedResponseDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubjectDto'
          nullable: true
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        hasNextPage:
          type: boolean
        hasPreviousPage:
          type: boolean
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    SubjectDtoPaginatedResponseDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/SubjectDtoPaginatedResponseDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    SubjectPerformanceDto:
      type: object
      properties:
        subjectName:
          type: string
          nullable: true
        averageScore:
          type: number
          format: double
        completionRate:
          type: number
          format: double
        studentCount:
          type: integer
          format: int32
      additionalProperties: false
    SubjectStatisticsDto:
      type: object
      properties:
        totalStudentsEnrolled:
          type: integer
          format: int32
        activeStudents:
          type: integer
          format: int32
        averageCompletionRate:
          type: number
          format: double
        averagePerformanceScore:
          type: number
          format: double
        totalAssignments:
          type: integer
          format: int32
        completedAssignments:
          type: integer
          format: int32
        lastActivityDate:
          type: string
          format: date-time
          nullable: true
        performanceLevels:
          type: array
          items:
            $ref: '#/components/schemas/PerformanceLevelDistributionDto'
          nullable: true
      additionalProperties: false
    SubjectStatisticsDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/SubjectStatisticsDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    SubjectUpdateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        grade:
          type: integer
          format: int32
          nullable: true
        isActive:
          type: boolean
          nullable: true
      additionalProperties: false
    TeacherCreateDto:
      required:
        - email
        - firstName
        - lastName
        - password
      type: object
      properties:
        firstName:
          maxLength: 100
          minLength: 0
          type: string
        lastName:
          maxLength: 100
          minLength: 0
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
          format: email
        password:
          maxLength: 100
          minLength: 8
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{8,}$'
          type: string
        phoneNumber:
          maxLength: 20
          minLength: 0
          type: string
          format: tel
          nullable: true
      additionalProperties: false
    TeacherDetailsDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        isActive:
          type: boolean
        lastLoginDate:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        totalStudents:
          type: integer
          format: int32
        activeStudents:
          type: integer
          format: int32
        assignedGrades:
          type: array
          items:
            type: string
          nullable: true
        statistics:
          $ref: '#/components/schemas/TeacherStatisticsDto'
        assignedStudents:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
          nullable: true
        studentAssignments:
          type: array
          items:
            $ref: '#/components/schemas/TeacherStudentAssignmentDto'
          nullable: true
        performance:
          $ref: '#/components/schemas/TeacherPerformanceDto'
      additionalProperties: false
    TeacherDetailsDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/TeacherDetailsDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    TeacherDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        isActive:
          type: boolean
        lastLoginDate:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        totalStudents:
          type: integer
          format: int32
        activeStudents:
          type: integer
          format: int32
        assignedGrades:
          type: array
          items:
            type: string
          nullable: true
        statistics:
          $ref: '#/components/schemas/TeacherStatisticsDto'
      additionalProperties: false
    TeacherDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/TeacherDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    TeacherDtoListApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeacherDto'
          nullable: true
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    TeacherDtoPaginatedResponseDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeacherDto'
          nullable: true
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        hasNextPage:
          type: boolean
        hasPreviousPage:
          type: boolean
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    TeacherDtoPaginatedResponseDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/TeacherDtoPaginatedResponseDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    TeacherPerformanceDto:
      type: object
      properties:
        overallEffectiveness:
          type: number
          format: double
        studentEngagement:
          type: number
          format: double
        progressImprovement:
          type: number
          format: double
        completedAssignments:
          type: integer
          format: int32
        pendingAssignments:
          type: integer
          format: int32
        monthlyTrends:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyPerformanceDto'
          nullable: true
      additionalProperties: false
    TeacherStatisticsDto:
      type: object
      properties:
        totalStudents:
          type: integer
          format: int32
        activeStudents:
          type: integer
          format: int32
        inactiveStudents:
          type: integer
          format: int32
        averageStudentProgress:
          type: number
          format: double
        averageStudentPerformance:
          type: number
          format: double
        studentsStruggling:
          type: integer
          format: int32
        studentsOnTrack:
          type: integer
          format: int32
        studentsAdvanced:
          type: integer
          format: int32
        lastActivityDate:
          type: string
          format: date-time
          nullable: true
        gradeDistribution:
          type: array
          items:
            $ref: '#/components/schemas/GradeDistributionDto'
          nullable: true
      additionalProperties: false
    TeacherStatisticsDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/TeacherStatisticsDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    TeacherStudentAssignmentCreateDto:
      required:
        - studentId
        - teacherId
      type: object
      properties:
        teacherId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        studentId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        assignedDate:
          type: string
          format: date-time
      additionalProperties: false
    TeacherStudentAssignmentDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        teacherId:
          type: integer
          format: int32
        studentId:
          type: integer
          format: int32
        studentName:
          type: string
          nullable: true
        studentEmail:
          type: string
          nullable: true
        studentGrade:
          type: integer
          format: int32
        assignedDate:
          type: string
          format: date-time
        unassignedDate:
          type: string
          format: date-time
          nullable: true
        isActive:
          type: boolean
        studentProgress:
          type: number
          format: double
        progressLevel:
          type: string
          nullable: true
      additionalProperties: false
    TeacherStudentAssignmentDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/TeacherStudentAssignmentDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    TeacherStudentAssignmentDtoListApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeacherStudentAssignmentDto'
          nullable: true
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    TeacherUpdateDto:
      type: object
      properties:
        firstName:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        lastName:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        email:
          maxLength: 255
          minLength: 0
          type: string
          format: email
          nullable: true
        phoneNumber:
          maxLength: 20
          minLength: 0
          type: string
          format: tel
          nullable: true
        isActive:
          type: boolean
          nullable: true
      additionalProperties: false
    TierLimitsDto:
      type: object
      properties:
        requestsPerMinute:
          maximum: 10000
          minimum: 1
          type: integer
          format: int32
        requestsPerHour:
          maximum: 1000000
          minimum: 1
          type: integer
          format: int32
        requestsPerDay:
          maximum: 50000000
          minimum: 1
          type: integer
          format: int32
      additionalProperties: false
    TimingDto:
      type: object
      properties:
        windowStart:
          type: string
          format: date-time
        lastRequest:
          type: string
          format: date-time
        nextResetTime:
          type: string
          format: date-time
      additionalProperties: false
    UserProfileDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        isActive:
          type: boolean
        lastLoginDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    UserProfileDtoApiResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/UserProfileDto'
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
    ViolationsDto:
      type: object
      properties:
        violationCount:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        penaltyUntil:
          type: string
          format: date-time
          nullable: true
        isUnderPenalty:
          type: boolean
      additionalProperties: false
    WeatherForecast:
      type: object
      properties:
        date:
          type: string
          format: date
        temperatureC:
          type: integer
          format: int32
        temperatureF:
          type: integer
          format: int32
          readOnly: true
        summary:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Enter your JWT token
      scheme: Bearer
      bearerFormat: JWT
security:
  - Bearer: [ ]