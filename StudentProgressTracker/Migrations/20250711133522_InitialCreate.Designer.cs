// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentProgressTracker.Data;

#nullable disable

namespace StudentProgressTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250711133522_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("StudentProgressTracker.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignmentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignmentType = "Practice",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7112),
                            Description = "Identify and write numbers 1-20",
                            DueDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 20,
                            SubjectId = 1,
                            Title = "Number Recognition 1-20",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7113)
                        },
                        new
                        {
                            Id = 2,
                            AssignmentType = "Quiz",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7735),
                            Description = "Learn first 10 sight words",
                            DueDate = new DateTime(2025, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 10,
                            SubjectId = 2,
                            Title = "Sight Words Week 1",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7735)
                        },
                        new
                        {
                            Id = 3,
                            AssignmentType = "Project",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7738),
                            Description = "Daily weather tracking for one week",
                            DueDate = new DateTime(2025, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 25,
                            SubjectId = 3,
                            Title = "Weather Observation",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7738)
                        },
                        new
                        {
                            Id = 4,
                            AssignmentType = "Homework",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7739),
                            Description = "Adding fractions with like denominators",
                            DueDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 30,
                            SubjectId = 5,
                            Title = "Fraction Addition",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7740)
                        },
                        new
                        {
                            Id = 5,
                            AssignmentType = "Project",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7741),
                            Description = "Complete book report with analysis",
                            DueDate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 50,
                            SubjectId = 6,
                            Title = "Book Report: Charlotte's Web",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7742)
                        },
                        new
                        {
                            Id = 6,
                            AssignmentType = "Project",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7762),
                            Description = "Create 3D model of solar system",
                            DueDate = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 40,
                            SubjectId = 7,
                            Title = "Solar System Model",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7762)
                        },
                        new
                        {
                            Id = 7,
                            AssignmentType = "Test",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7764),
                            Description = "Solving quadratic equations unit test",
                            DueDate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 100,
                            SubjectId = 9,
                            Title = "Quadratic Equations Test",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7764)
                        },
                        new
                        {
                            Id = 8,
                            AssignmentType = "Essay",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7765),
                            Description = "5-paragraph essay on themes in Romeo and Juliet",
                            DueDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 100,
                            SubjectId = 10,
                            Title = "Romeo and Juliet Essay",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7765)
                        },
                        new
                        {
                            Id = 9,
                            AssignmentType = "Lab",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7766),
                            Description = "Microscope lab on cell structures",
                            DueDate = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPoints = 75,
                            SubjectId = 11,
                            Title = "Cell Structure Lab",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(7767)
                        });
                });

            modelBuilder.Entity("StudentProgressTracker.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(2501),
                            DateOfBirth = new DateTime(2018, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emma.wilson@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emma",
                            Grade = 1,
                            IsActive = true,
                            LastName = "Wilson",
                            Notes = "Enthusiastic learner, loves reading",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(2510)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5433),
                            DateOfBirth = new DateTime(2018, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "liam.anderson@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Liam",
                            Grade = 1,
                            IsActive = true,
                            LastName = "Anderson",
                            Notes = "Struggles with math concepts, needs extra support",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5440)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5464),
                            DateOfBirth = new DateTime(2018, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sophia.martinez@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sophia",
                            Grade = 1,
                            IsActive = true,
                            LastName = "Martinez",
                            Notes = "Advanced reader, quiet in class",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5465)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5466),
                            DateOfBirth = new DateTime(2016, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "noah.thompson@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Noah",
                            Grade = 3,
                            IsActive = true,
                            LastName = "Thompson",
                            Notes = "Good at problem solving, active participant",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5467)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5469),
                            DateOfBirth = new DateTime(2016, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "olivia.garcia@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivia",
                            Grade = 3,
                            IsActive = true,
                            LastName = "Garcia",
                            Notes = "Excellent in science, curious about nature",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5470)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5471),
                            DateOfBirth = new DateTime(2016, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ethan.rodriguez@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ethan",
                            Grade = 3,
                            IsActive = true,
                            LastName = "Rodriguez",
                            Notes = "Sporadic attendance, needs encouragement",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5471)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5473),
                            DateOfBirth = new DateTime(2014, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ava.lee@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ava",
                            Grade = 5,
                            IsActive = true,
                            LastName = "Lee",
                            Notes = "Math whiz, helps other students",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5474)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5475),
                            DateOfBirth = new DateTime(2014, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mason.white@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mason",
                            Grade = 5,
                            IsActive = true,
                            LastName = "White",
                            Notes = "Struggles with reading comprehension",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5476)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5477),
                            DateOfBirth = new DateTime(2014, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "isabella.harris@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isabella",
                            Grade = 5,
                            IsActive = true,
                            LastName = "Harris",
                            Notes = "Well-rounded student, consistent performer",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5478)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5479),
                            DateOfBirth = new DateTime(2014, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "william.clark@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "William",
                            Grade = 5,
                            IsActive = true,
                            LastName = "Clark",
                            Notes = "Creative writer, loves social studies",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5480)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5606),
                            DateOfBirth = new DateTime(2012, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mia.lewis@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mia",
                            Grade = 7,
                            IsActive = true,
                            LastName = "Lewis",
                            Notes = "Strong in all subjects, leadership qualities",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5606)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5608),
                            DateOfBirth = new DateTime(2012, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "james.walker@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "James",
                            Grade = 7,
                            IsActive = true,
                            LastName = "Walker",
                            Notes = "Inactive lately, needs motivation",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5609)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5611),
                            DateOfBirth = new DateTime(2012, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlotte.hall@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Charlotte",
                            Grade = 7,
                            IsActive = true,
                            LastName = "Hall",
                            Notes = "Excels in science, future engineer",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5611)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5661),
                            DateOfBirth = new DateTime(2010, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "benjamin.young@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Benjamin",
                            Grade = 9,
                            IsActive = true,
                            LastName = "Young",
                            Notes = "Advanced in mathematics, peer tutor",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5668)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5670),
                            DateOfBirth = new DateTime(2010, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amelia.king@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Amelia",
                            Grade = 9,
                            IsActive = true,
                            LastName = "King",
                            Notes = "Gifted writer, participates in debate team",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5670)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5672),
                            DateOfBirth = new DateTime(2010, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lucas.wright@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lucas",
                            Grade = 9,
                            IsActive = true,
                            LastName = "Wright",
                            Notes = "Struggling student, requires additional support",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5673)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5674),
                            DateOfBirth = new DateTime(2010, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "harper.lopez@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Harper",
                            Grade = 9,
                            IsActive = true,
                            LastName = "Lopez",
                            Notes = "Inconsistent attendance, family issues",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5675)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5676),
                            DateOfBirth = new DateTime(2008, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alexander.hill@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alexander",
                            Grade = 11,
                            IsActive = true,
                            LastName = "Hill",
                            Notes = "AP student, college prep track",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5677)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5678),
                            DateOfBirth = new DateTime(2008, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "evelyn.green@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Evelyn",
                            Grade = 11,
                            IsActive = true,
                            LastName = "Green",
                            Notes = "Strong in humanities, weak in STEM",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5678)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5680),
                            DateOfBirth = new DateTime(2008, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "henry.adams@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Henry",
                            Grade = 11,
                            IsActive = true,
                            LastName = "Adams",
                            Notes = "Athlete, needs academic balance",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5680)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5682),
                            DateOfBirth = new DateTime(2007, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "abigail.baker@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Abigail",
                            Grade = 12,
                            IsActive = true,
                            LastName = "Baker",
                            Notes = "Valedictorian candidate, exceptional student",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5682)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5684),
                            DateOfBirth = new DateTime(2007, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.nelson@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            Grade = 12,
                            IsActive = true,
                            LastName = "Nelson",
                            Notes = "Late bloomer, improving rapidly",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5684)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5697),
                            DateOfBirth = new DateTime(2007, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.carter@school.edu",
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emily",
                            Grade = 12,
                            IsActive = true,
                            LastName = "Carter",
                            Notes = "Art-focused student, creative thinker",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(5698)
                        });
                });

            modelBuilder.Entity("StudentProgressTracker.Models.StudentAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherFeedback")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSpentMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId", "AssignmentId")
                        .IsUnique();

                    b.ToTable("StudentAssignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignmentId = 1,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(300),
                            Score = 19.0m,
                            Status = "Graded",
                            StudentId = 1,
                            SubmissionDate = new DateTime(2025, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Excellent work! Keep it up!",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(301)
                        },
                        new
                        {
                            Id = 2,
                            AssignmentId = 2,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1066),
                            Score = 10.0m,
                            Status = "Graded",
                            StudentId = 1,
                            SubmissionDate = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Perfect sight word recognition",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1066)
                        },
                        new
                        {
                            Id = 3,
                            AssignmentId = 1,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1069),
                            Score = 12.0m,
                            Status = "Graded",
                            StudentId = 2,
                            SubmissionDate = new DateTime(2025, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Good effort, practice numbers 15-20 more",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1069)
                        },
                        new
                        {
                            Id = 4,
                            AssignmentId = 2,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1084),
                            Status = "NotStarted",
                            StudentId = 2,
                            TeacherFeedback = "Please complete and turn in",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1084)
                        },
                        new
                        {
                            Id = 5,
                            AssignmentId = 4,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1085),
                            Score = 30.0m,
                            Status = "Graded",
                            StudentId = 7,
                            SubmissionDate = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Perfect understanding of fractions!",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1085)
                        },
                        new
                        {
                            Id = 6,
                            AssignmentId = 6,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1087),
                            Score = 38.0m,
                            Status = "Graded",
                            StudentId = 7,
                            SubmissionDate = new DateTime(2025, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Creative and accurate model",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1087)
                        },
                        new
                        {
                            Id = 7,
                            AssignmentId = 4,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1088),
                            Score = 22.0m,
                            Status = "Graded",
                            StudentId = 8,
                            SubmissionDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Good math work, keep practicing",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1089)
                        },
                        new
                        {
                            Id = 8,
                            AssignmentId = 5,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1090),
                            Score = 32.0m,
                            Status = "Graded",
                            StudentId = 8,
                            SubmissionDate = new DateTime(2025, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Nice improvement in reading comprehension",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1090)
                        },
                        new
                        {
                            Id = 9,
                            AssignmentId = 7,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1092),
                            Score = 96.0m,
                            Status = "Graded",
                            StudentId = 14,
                            SubmissionDate = new DateTime(2025, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Exceptional understanding of quadratics",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1092)
                        },
                        new
                        {
                            Id = 10,
                            AssignmentId = 9,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1093),
                            Score = 72.0m,
                            Status = "Graded",
                            StudentId = 14,
                            SubmissionDate = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Good lab technique and observations",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1094)
                        },
                        new
                        {
                            Id = 11,
                            AssignmentId = 7,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1095),
                            Score = 45.0m,
                            Status = "Graded",
                            StudentId = 16,
                            SubmissionDate = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Needs more practice with quadratic formula",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1096)
                        },
                        new
                        {
                            Id = 12,
                            AssignmentId = 8,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1097),
                            Status = "InProgress",
                            StudentId = 16,
                            TeacherFeedback = "Working on essay draft",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1097)
                        },
                        new
                        {
                            Id = 13,
                            AssignmentId = 7,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1098),
                            Status = "NotStarted",
                            StudentId = 17,
                            TeacherFeedback = "Please see me about makeup work",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1098)
                        },
                        new
                        {
                            Id = 14,
                            AssignmentId = 7,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1099),
                            Score = 100.0m,
                            Status = "Graded",
                            StudentId = 21,
                            SubmissionDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Outstanding work as always!",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1100)
                        },
                        new
                        {
                            Id = 15,
                            AssignmentId = 8,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1101),
                            Score = 98.0m,
                            Status = "Graded",
                            StudentId = 21,
                            SubmissionDate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherFeedback = "Insightful analysis and excellent writing",
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 686, DateTimeKind.Utc).AddTicks(1101)
                        });
                });

            modelBuilder.Entity("StudentProgressTracker.Models.StudentProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CompletionPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PerformanceScore")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ProgressLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeSpentMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("StudentId", "SubjectId", "AssessmentDate");

                    b.ToTable("StudentProgress");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssessmentDate = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 95.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9083),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Excellent number recognition skills",
                            PerformanceScore = 92.0m,
                            ProgressLevel = "Advanced",
                            StudentId = 1,
                            SubjectId = 1,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9084)
                        },
                        new
                        {
                            Id = 2,
                            AssessmentDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 88.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9902),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Reading above grade level",
                            PerformanceScore = 90.0m,
                            ProgressLevel = "Advanced",
                            StudentId = 1,
                            SubjectId = 2,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9902)
                        },
                        new
                        {
                            Id = 3,
                            AssessmentDate = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 45.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9904),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Needs additional math support",
                            PerformanceScore = 52.0m,
                            ProgressLevel = "Below Basic",
                            StudentId = 2,
                            SubjectId = 1,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9904)
                        },
                        new
                        {
                            Id = 4,
                            AssessmentDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 60.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9906),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Showing improvement with phonics",
                            PerformanceScore = 65.0m,
                            ProgressLevel = "Basic",
                            StudentId = 2,
                            SubjectId = 2,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9906)
                        },
                        new
                        {
                            Id = 5,
                            AssessmentDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 98.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9908),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Exceptional mathematical reasoning",
                            PerformanceScore = 97.0m,
                            ProgressLevel = "Advanced",
                            StudentId = 7,
                            SubjectId = 5,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9908)
                        },
                        new
                        {
                            Id = 6,
                            AssessmentDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 85.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9909),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Strong science understanding",
                            PerformanceScore = 88.0m,
                            ProgressLevel = "Proficient",
                            StudentId = 7,
                            SubjectId = 7,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9909)
                        },
                        new
                        {
                            Id = 7,
                            AssessmentDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 55.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9911),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Reading comprehension needs work",
                            PerformanceScore = 58.0m,
                            ProgressLevel = "Basic",
                            StudentId = 8,
                            SubjectId = 6,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9911)
                        },
                        new
                        {
                            Id = 8,
                            AssessmentDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 72.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9947),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Better with math calculations",
                            PerformanceScore = 75.0m,
                            ProgressLevel = "Proficient",
                            StudentId = 8,
                            SubjectId = 5,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9947)
                        },
                        new
                        {
                            Id = 9,
                            AssessmentDate = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 96.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9948),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Consistently high performance",
                            PerformanceScore = 94.0m,
                            ProgressLevel = "Advanced",
                            StudentId = 14,
                            SubjectId = 9,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9949)
                        },
                        new
                        {
                            Id = 10,
                            AssessmentDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 89.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9959),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Strong in STEM subjects",
                            PerformanceScore = 91.0m,
                            ProgressLevel = "Advanced",
                            StudentId = 14,
                            SubjectId = 11,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9960)
                        },
                        new
                        {
                            Id = 11,
                            AssessmentDate = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 42.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9961),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Requires intensive support",
                            PerformanceScore = 48.0m,
                            ProgressLevel = "Below Basic",
                            StudentId = 16,
                            SubjectId = 9,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9962)
                        },
                        new
                        {
                            Id = 12,
                            AssessmentDate = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 58.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9963),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Some improvement in writing",
                            PerformanceScore = 62.0m,
                            ProgressLevel = "Basic",
                            StudentId = 16,
                            SubjectId = 10,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9963)
                        },
                        new
                        {
                            Id = 13,
                            AssessmentDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 35.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9965),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Attendance issues affecting progress",
                            PerformanceScore = 40.0m,
                            ProgressLevel = "Below Basic",
                            StudentId = 17,
                            SubjectId = 9,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9965)
                        },
                        new
                        {
                            Id = 14,
                            AssessmentDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 99.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9966),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Outstanding academic performance",
                            PerformanceScore = 98.0m,
                            ProgressLevel = "Advanced",
                            StudentId = 21,
                            SubjectId = 9,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9967)
                        },
                        new
                        {
                            Id = 15,
                            AssessmentDate = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompletionPercentage = 97.0m,
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9968),
                            LastActivityDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Exceptional writing and analysis skills",
                            PerformanceScore = 96.0m,
                            ProgressLevel = "Advanced",
                            StudentId = 21,
                            SubjectId = 10,
                            TimeSpentMinutes = 0,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(9968)
                        });
                });

            modelBuilder.Entity("StudentProgressTracker.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "MATH",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(381),
                            Description = "Basic arithmetic and number concepts",
                            Grade = 1,
                            IsActive = true,
                            Name = "Mathematics",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(387)
                        },
                        new
                        {
                            Id = 2,
                            Code = "READ",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1106),
                            Description = "Phonics, sight words, and comprehension",
                            Grade = 1,
                            IsActive = true,
                            Name = "Reading",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1106)
                        },
                        new
                        {
                            Id = 3,
                            Code = "SCI",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1109),
                            Description = "Nature, simple experiments, and observations",
                            Grade = 1,
                            IsActive = true,
                            Name = "Science",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1109)
                        },
                        new
                        {
                            Id = 4,
                            Code = "SS",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1110),
                            Description = "Community, family, and basic geography",
                            Grade = 1,
                            IsActive = true,
                            Name = "Social Studies",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1110)
                        },
                        new
                        {
                            Id = 5,
                            Code = "MATH",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1163),
                            Description = "Fractions, decimals, and basic algebra",
                            Grade = 5,
                            IsActive = true,
                            Name = "Mathematics",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1163)
                        },
                        new
                        {
                            Id = 6,
                            Code = "READ",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1164),
                            Description = "Advanced comprehension and writing skills",
                            Grade = 5,
                            IsActive = true,
                            Name = "Reading",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1165)
                        },
                        new
                        {
                            Id = 7,
                            Code = "SCI",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1166),
                            Description = "Earth science, biology, and scientific method",
                            Grade = 5,
                            IsActive = true,
                            Name = "Science",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1166)
                        },
                        new
                        {
                            Id = 8,
                            Code = "SS",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1167),
                            Description = "US history, geography, and civics",
                            Grade = 5,
                            IsActive = true,
                            Name = "Social Studies",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1167)
                        },
                        new
                        {
                            Id = 9,
                            Code = "MATH",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1168),
                            Description = "Algebra, geometry, and problem solving",
                            Grade = 9,
                            IsActive = true,
                            Name = "Mathematics",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1168)
                        },
                        new
                        {
                            Id = 10,
                            Code = "ENG",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1169),
                            Description = "Literature, composition, and critical thinking",
                            Grade = 9,
                            IsActive = true,
                            Name = "English",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1169)
                        },
                        new
                        {
                            Id = 11,
                            Code = "SCI",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1170),
                            Description = "Biology, chemistry, and physics concepts",
                            Grade = 9,
                            IsActive = true,
                            Name = "Science",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1171)
                        },
                        new
                        {
                            Id = 12,
                            Code = "SS",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1172),
                            Description = "World history and cultural studies",
                            Grade = 9,
                            IsActive = true,
                            Name = "Social Studies",
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(1172)
                        });
                });

            modelBuilder.Entity("StudentProgressTracker.Models.TeacherStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UnassignedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId", "StudentId", "IsActive")
                        .IsUnique()
                        .HasFilter("[IsActive] = 1");

                    b.ToTable("TeacherStudents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8217),
                            IsActive = true,
                            StudentId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 2,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8602),
                            IsActive = true,
                            StudentId = 2,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8603),
                            IsActive = true,
                            StudentId = 3,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 4,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8605),
                            IsActive = true,
                            StudentId = 7,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 5,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8605),
                            IsActive = true,
                            StudentId = 8,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 6,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8606),
                            IsActive = true,
                            StudentId = 9,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 7,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8607),
                            IsActive = true,
                            StudentId = 10,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 8,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8608),
                            IsActive = true,
                            StudentId = 14,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 9,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8609),
                            IsActive = true,
                            StudentId = 15,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 10,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8610),
                            IsActive = true,
                            StudentId = 16,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 11,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8611),
                            IsActive = true,
                            StudentId = 18,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 12,
                            AssignedDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 685, DateTimeKind.Utc).AddTicks(8612),
                            IsActive = true,
                            StudentId = 21,
                            TeacherId = 4
                        });
                });

            modelBuilder.Entity("StudentProgressTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c8be7825-a563-4e23-b21f-04c24fddc7fa",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(5980),
                            Email = "admin@edtech.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            IsActive = true,
                            LastName = "User",
                            LockoutEnabled = false,
                            PasswordHash = "$2a$11$9k/pu74kKbgnChnI2yIvm.Z8fPcHRTGZwzmdaKm8hpNDImlwDAmoq",
                            PhoneNumberConfirmed = false,
                            Role = "Admin",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 105, DateTimeKind.Utc).AddTicks(5983)
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6e8778c-755e-4069-a1c1-5404568c5591",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 274, DateTimeKind.Utc).AddTicks(221),
                            Email = "sarah.johnson@edtech.com",
                            EmailConfirmed = false,
                            FirstName = "Sarah",
                            IsActive = true,
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            PasswordHash = "$2a$11$oh46SD8eYyiyLW2y7pkUyOJhrT92ybnJB5MStQ9vS9.yqXacZ.Sem",
                            PhoneNumberConfirmed = false,
                            Role = "Teacher",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 274, DateTimeKind.Utc).AddTicks(228)
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2b03f7e0-0d19-4ba5-9468-2ad63c85adad",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 435, DateTimeKind.Utc).AddTicks(862),
                            Email = "michael.brown@edtech.com",
                            EmailConfirmed = false,
                            FirstName = "Michael",
                            IsActive = true,
                            LastName = "Brown",
                            LockoutEnabled = false,
                            PasswordHash = "$2a$11$krzcM1FaKkbr8fbC1aW3UexbWl5wYB1ExNbaF91XGiZmJF41w83pm",
                            PhoneNumberConfirmed = false,
                            Role = "Teacher",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 435, DateTimeKind.Utc).AddTicks(872)
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d43621ef-7d98-4f40-8d72-9b13eecf71c8",
                            CreatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 574, DateTimeKind.Utc).AddTicks(6385),
                            Email = "jennifer.davis@edtech.com",
                            EmailConfirmed = false,
                            FirstName = "Jennifer",
                            IsActive = true,
                            LastName = "Davis",
                            LockoutEnabled = false,
                            PasswordHash = "$2a$11$ftvGzn2tlbLqxuWk5bDIWO/wYIxnidcSIDhdt3j6aHZPhKtuvervS",
                            PhoneNumberConfirmed = false,
                            Role = "Teacher",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2025, 7, 11, 13, 35, 21, 574, DateTimeKind.Utc).AddTicks(6392)
                        });
                });

            modelBuilder.Entity("StudentProgressTracker.Models.Assignment", b =>
                {
                    b.HasOne("StudentProgressTracker.Models.Subject", "Subject")
                        .WithMany("Assignments")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentProgressTracker.Models.StudentAssignment", b =>
                {
                    b.HasOne("StudentProgressTracker.Models.Assignment", "Assignment")
                        .WithMany("StudentAssignments")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentProgressTracker.Models.Student", "Student")
                        .WithMany("StudentAssignments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentProgressTracker.Models.StudentProgress", b =>
                {
                    b.HasOne("StudentProgressTracker.Models.Student", "Student")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentProgressTracker.Models.Subject", "Subject")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentProgressTracker.Models.TeacherStudent", b =>
                {
                    b.HasOne("StudentProgressTracker.Models.Student", "Student")
                        .WithMany("TeacherStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentProgressTracker.Models.User", "Teacher")
                        .WithMany("TeacherStudents")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("StudentProgressTracker.Models.Assignment", b =>
                {
                    b.Navigation("StudentAssignments");
                });

            modelBuilder.Entity("StudentProgressTracker.Models.Student", b =>
                {
                    b.Navigation("ProgressRecords");

                    b.Navigation("StudentAssignments");

                    b.Navigation("TeacherStudents");
                });

            modelBuilder.Entity("StudentProgressTracker.Models.Subject", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("ProgressRecords");
                });

            modelBuilder.Entity("StudentProgressTracker.Models.User", b =>
                {
                    b.Navigation("TeacherStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
